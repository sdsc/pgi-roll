<?xml version="1.0" standalone="no"?>

<kickstart>

<description>
PGI roll installation test.
</description>

<copyright>
Copyright (c) 2000 - 2011 The Regents of the University of California.
All rights reserved. Rocks(r) v5.1 www.rocksclusters.org
</copyright>

<changelog>
</changelog>

<post>

/bin/mkdir -m 0755 /root/rolltests

<file name="/root/rolltests/pgi.t" perms="0755">
<![CDATA[#!/usr/bin/perl -w
# pgi roll installation test.  Usage:
# pgi.t [nodetype]
#   where nodetype is one of "Compute", "Dbnode", "Frontend" or "Login"
#   if not specified, the test assumes either Compute or Frontend

use Test::More qw(no_plan);

my $appliance = $#ARGV >= 0 ? $ARGV[0] :
                -d '/export/rocks/install' ? 'Frontend' : 'Compute';
my $installedOnAppliancesPattern = '.';
my $isInstalled = -d '/opt/pgi';
my $modulesInstalled = -f '/etc/profile.d/modules.sh';
my $output;

my $TESTFILE = 'tmppgi';

open(OUT, ">$TESTFILE.c");
print OUT <<END;
#include <stdio.h>
int main(char **args) {
  printf("Hello world\\n");
  return 0;
}
END
open(OUT, ">$TESTFILE.f");
print OUT <<END;
      PROGRAM HELLO
      PRINT*, 'Hello world!'
      END
END
close(OUT);

# pgi-common.xml
if($appliance =~ /$installedOnAppliancesPattern/) {
  ok($isInstalled, 'pgi compilers installed');
} else {
  ok(! $isInstalled, 'pgi compilers not installed');
}
SKIP: {

  skip 'pgi compilers not installed', 6 if ! $isInstalled;
  my $setup = $modulesInstalled ?
              `$ENV{MODULESHOME}/bin/modulecmd bash load pgi` :
              'echo > /dev/null'; # noop
  $output = `$setup 2>&1; pgcc -o $TESTFILE $TESTFILE.c 2>&1`;
  ok($? == 0, 'pgi C compiler works');
  $output = `./$TESTFILE`;
  ok($? == 0, 'compiled C program runs');
  like($output, qr/Hello world/, 'compile C program correct output');
  
  $output = `$setup 2>&1; pgf77 -o $TESTFILE $TESTFILE.f 2>&1`;
  ok($? == 0, 'pgi FORTRAN compiler works');
  $output = `./$TESTFILE`;
  ok($? == 0, 'compiled FORTRAN program runs');
  like($output, qr/Hello world/, 'compile FORTRAN program correct output');
  $output = `man pgcc 2>&1`;
  ok($output =~ /Portland/, 'man works for pgi');
  
}

# pgi-modules-common.xml
SKIP: {

  skip 'pgi compilers not installed', 1 if ! $isInstalled;
  if($modulesInstalled) {
    ok(! -f '/etc/profile.d/pgi.csh' &&
       ! -f '/etc/profile.d/pgi.sh', 'pgi profile.d removed');
    like($ENV{MODULEPATH}, qr#/opt/modulefiles/compilers#,
         'MODULEPATH set for compilers');
    `/bin/ls /opt/modulefiles/compilers/pgi/[0-9]* 2>&1`;
    ok($? == 0, 'pgi module installed');
    `/bin/ls /opt/modulefiles/compilers/pgi/.version.[0-9]* 2>&1`;
    ok($? == 0, 'pgi version module installed');
    ok(-l '/opt/modulefiles/compilers/pgi/.version',
       'pgi version module link created');
  } else {
    ok(-f '/etc/profile.d/pgi.csh' && -f '/etc/profile.d/pgi.sh',
       'pgi profile.d installed');
  }

}

`rm -f $TESTFILE*`;
]]>
</file>

</post>

</kickstart> 
